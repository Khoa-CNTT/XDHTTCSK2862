var LocationsAPI = 'http://localhost:3000/location';
var UsersAPI ='http://localhost:3000/user';
function start(){
    getData((locations, users) => {
        renderLocation(locations, users);
    });
    
}
start();
function getData(callback) {
    let token = localStorage.getItem("token"); // L·∫•y token t·ª´ localStorage

    if (!token) {
        console.error("Kh√¥ng t√¨m th·∫•y token, vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i!");
        return;
    }

    Promise.all([
        fetch(LocationsAPI, {
            headers: {
                "Authorization": `Bearer ${token}`,
                "Content-Type": "application/json"
            }
        }).then(res => res.json()),

        fetch(UsersAPI, {
            headers: {
                "Authorization": `Bearer ${token}`,
                "Content-Type": "application/json"
            }
        }).then(res => res.json()),
    ])
        .then(([locations, users]) => {
            callback(locations, users);
        })
        .catch(error => console.error("L·ªói khi l·∫•y d·ªØ li·ªáu:", error));
}
//render table data
function renderLocation(locations, users) {
    var listLocationBlock = document.querySelector('#list-place tbody');
    if (!listLocationBlock) return;

    // H·ªßy DataTables n·∫øu ƒë√£ kh·ªüi t·∫°o
    if ($.fn.DataTable.isDataTable('#list-place')) {
        $('#list-place').DataTable().destroy();
    }

    var htmls = locations.map(function (location) {
        var supplier = users.find(user => user.id === location.user_id);
        var supplierName = supplier ? `${supplier.last_name} ${supplier.first_name}` : 'Kh√¥ng c√≥ nh√† cung c·∫•p';

        return `
            <tr class="list-place-${location.id}">
                <td>${location.name}</td>
                <td style="width: 40%;">${location.description || 'Kh√¥ng c√≥ m√¥ t·∫£'}</td>
                <td>${location.hourly_rental_fee ? location.hourly_rental_fee.toLocaleString() + " VND" : '0 VND'}</td>
                <td>${location.created_at}</td>
                <td>${supplierName}</td>
                <td class="text-center">
                    <div class="action-dropdown">
                        <button class="btn btn-light action-btn">...</button>
                        <div class="dropdown-content">
                            <button class="dropdown-item delete-btn" data-id="${location.id}">Xo√°</button>
                        </div>
                    </div>
                </td>
            </tr>
        `;
    });

    listLocationBlock.innerHTML = htmls.join('');

    // Kh·ªüi t·∫°o l·∫°i DataTables
    $('#list-place').DataTable({
        "order": [[3, "desc"]],
        "language": {
            "search": "T√¨m ki·∫øm:",
            "lengthMenu": "",//Hi·ªÉn th·ªã _MENU_ ƒë·ªãa ƒëi·ªÉm",
            "info": "Hi·ªÉn th·ªã _START_ ƒë·∫øn _END_ c·ªßa _TOTAL_ ƒë·ªãa ƒëi·ªÉm",
            "infoEmpty": "Kh√¥ng c√≥ d·ªØ li·ªáu",
            "zeroRecords": "Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£",
            "paginate": {
                "first": "ƒê·∫ßu",
                "last": "Cu·ªëi",
                "next": "Ti·∫øp",
                "previous": "Tr∆∞·ªõc"
            }
        }
    });

    // üõ† G√°n s·ª± ki·ªán d√πng delegate ƒë·ªÉ dropdown ho·∫°t ƒë·ªông tr√™n t·∫•t c·∫£ c√°c trang
    $('#list-place tbody').on('click', '.action-btn', function (event) {
        let dropdown = $(this).next('.dropdown-content');
        $('.dropdown-content').not(dropdown).hide(); // ·∫®n dropdown kh√°c
        dropdown.toggle();
        event.stopPropagation();
    });

    // X·ª≠ l√Ω s·ª± ki·ªán xo√°
    $('#list-place tbody').on('click', '.delete-btn', function () {
        let locationId = $(this).data('id');
        handleDeleteLocation(locationId);
    });

    // ƒê√≥ng dropdown khi b·∫•m ra ngo√†i
    $(document).click(function () {
        $('.dropdown-content').hide();
    });
}

//T·∫°o Xo√° dich vu
function handleDeleteLocation(id) {
    var options = {
        method: 'DELETE',
        headers: {
            "Content-Type": "application/json",
        },

    };
    fetch(LocationsAPI + '/' + id, options)
        .then(function (respone) {
            return respone.json();
        })
        .then(function () {
            var listLocation = document.querySelector('.list-place-' + id)
            if (listLocation) {
                listLocation.remove();
            }
            alert("Xo√° ƒë·ªãa ƒëi·ªÉm th√†nh c√¥ng!");
        })
        .catch(function () {
            alert("Xo√° kh√¥ng th√†nh c√¥ng!");
        });

}